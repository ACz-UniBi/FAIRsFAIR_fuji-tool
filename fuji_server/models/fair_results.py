# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from fuji_server.models.base_model_ import Model
from fuji_server import util
from fuji_server.models import AnyOfFAIRResultsResultsItems

class FAIRResults(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, timestamp: datetime=None, metric_specification: str=None, total_metrics: int=None, results: List[AnyOfFAIRResultsResultsItems]=None):  # noqa: E501
        """FAIRResults - a model defined in Swagger

        :param timestamp: The timestamp of this FAIRResults.  # noqa: E501
        :type timestamp: datetime
        :param metric_specification: The metric_specification of this FAIRResults.  # noqa: E501
        :type metric_specification: str
        :param total_metrics: The total_metrics of this FAIRResults.  # noqa: E501
        :type total_metrics: int
        :param results: The results of this FAIRResults.  # noqa: E501
        :type results: List[AnyOfFAIRResultsResultsItems]
        """
        self.swagger_types = {
            'timestamp': datetime,
            'metric_specification': str,
            'total_metrics': int,
            'results': List[AnyOfFAIRResultsResultsItems]
        }

        self.attribute_map = {
            'timestamp': 'timestamp',
            'metric_specification': 'metric_specification',
            'total_metrics': 'total_metrics',
            'results': 'results'
        }
        self._timestamp = timestamp
        self._metric_specification = metric_specification
        self._total_metrics = total_metrics
        self._results = results

    @classmethod
    def from_dict(cls, dikt) -> 'FAIRResults':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FAIRResults of this FAIRResults.  # noqa: E501
        :rtype: FAIRResults
        """
        return util.deserialize_model(dikt, cls)

    @property
    def timestamp(self) -> datetime:
        """Gets the timestamp of this FAIRResults.


        :return: The timestamp of this FAIRResults.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: datetime):
        """Sets the timestamp of this FAIRResults.


        :param timestamp: The timestamp of this FAIRResults.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def metric_specification(self) -> str:
        """Gets the metric_specification of this FAIRResults.


        :return: The metric_specification of this FAIRResults.
        :rtype: str
        """
        return self._metric_specification

    @metric_specification.setter
    def metric_specification(self, metric_specification: str):
        """Sets the metric_specification of this FAIRResults.


        :param metric_specification: The metric_specification of this FAIRResults.
        :type metric_specification: str
        """

        self._metric_specification = metric_specification

    @property
    def total_metrics(self) -> int:
        """Gets the total_metrics of this FAIRResults.


        :return: The total_metrics of this FAIRResults.
        :rtype: int
        """
        return self._total_metrics

    @total_metrics.setter
    def total_metrics(self, total_metrics: int):
        """Sets the total_metrics of this FAIRResults.


        :param total_metrics: The total_metrics of this FAIRResults.
        :type total_metrics: int
        """

        self._total_metrics = total_metrics

    @property
    def results(self) -> List[AnyOfFAIRResultsResultsItems]:
        """Gets the results of this FAIRResults.


        :return: The results of this FAIRResults.
        :rtype: List[AnyOfFAIRResultsResultsItems]
        """
        return self._results

    @results.setter
    def results(self, results: List[AnyOfFAIRResultsResultsItems]):
        """Sets the results of this FAIRResults.


        :param results: The results of this FAIRResults.
        :type results: List[AnyOfFAIRResultsResultsItems]
        """

        self._results = results
