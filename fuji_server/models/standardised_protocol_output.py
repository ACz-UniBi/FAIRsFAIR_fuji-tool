# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from fuji_server.models.base_model_ import Model
from fuji_server import util


class StandardisedProtocolOutput(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, standard_data_protocol: str=None, standard_metadata_protocol: str=None):  # noqa: E501
        """StandardisedProtocolOutput - a model defined in Swagger

        :param standard_data_protocol: The standard_data_protocol of this StandardisedProtocolOutput.  # noqa: E501
        :type standard_data_protocol: str
        :param standard_metadata_protocol: The standard_metadata_protocol of this StandardisedProtocolOutput.  # noqa: E501
        :type standard_metadata_protocol: str
        """
        self.swagger_types = {
            'standard_data_protocol': str,
            'standard_metadata_protocol': str
        }

        self.attribute_map = {
            'standard_data_protocol': 'standard_data_protocol',
            'standard_metadata_protocol': 'standard_metadata_protocol'
        }
        self._standard_data_protocol = standard_data_protocol
        self._standard_metadata_protocol = standard_metadata_protocol

    @classmethod
    def from_dict(cls, dikt) -> 'StandardisedProtocolOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The StandardisedProtocol_output of this StandardisedProtocolOutput.  # noqa: E501
        :rtype: StandardisedProtocolOutput
        """
        return util.deserialize_model(dikt, cls)

    @property
    def standard_data_protocol(self) -> str:
        """Gets the standard_data_protocol of this StandardisedProtocolOutput.


        :return: The standard_data_protocol of this StandardisedProtocolOutput.
        :rtype: str
        """
        return self._standard_data_protocol

    @standard_data_protocol.setter
    def standard_data_protocol(self, standard_data_protocol: str):
        """Sets the standard_data_protocol of this StandardisedProtocolOutput.


        :param standard_data_protocol: The standard_data_protocol of this StandardisedProtocolOutput.
        :type standard_data_protocol: str
        """

        self._standard_data_protocol = standard_data_protocol

    @property
    def standard_metadata_protocol(self) -> str:
        """Gets the standard_metadata_protocol of this StandardisedProtocolOutput.


        :return: The standard_metadata_protocol of this StandardisedProtocolOutput.
        :rtype: str
        """
        return self._standard_metadata_protocol

    @standard_metadata_protocol.setter
    def standard_metadata_protocol(self, standard_metadata_protocol: str):
        """Sets the standard_metadata_protocol of this StandardisedProtocolOutput.


        :param standard_metadata_protocol: The standard_metadata_protocol of this StandardisedProtocolOutput.
        :type standard_metadata_protocol: str
        """

        self._standard_metadata_protocol = standard_metadata_protocol
