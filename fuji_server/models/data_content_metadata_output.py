# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from fuji_server.models.base_model_ import Model
from fuji_server.models.data_content_metadata_output_inner import DataContentMetadataOutputInner  # noqa: F401,E501
from fuji_server import util


class DataContentMetadataOutput(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, has_content_descriptors: bool=False, data_content_descriptor: List[DataContentMetadataOutputInner]=None):  # noqa: E501
        """DataContentMetadataOutput - a model defined in Swagger

        :param has_content_descriptors: The has_content_descriptors of this DataContentMetadataOutput.  # noqa: E501
        :type has_content_descriptors: bool
        :param data_content_descriptor: The data_content_descriptor of this DataContentMetadataOutput.  # noqa: E501
        :type data_content_descriptor: List[DataContentMetadataOutputInner]
        """
        self.swagger_types = {
            'has_content_descriptors': bool,
            'data_content_descriptor': List[DataContentMetadataOutputInner]
        }

        self.attribute_map = {
            'has_content_descriptors': 'has_content_descriptors',
            'data_content_descriptor': 'data_content_descriptor'
        }
        self._has_content_descriptors = has_content_descriptors
        self._data_content_descriptor = data_content_descriptor

    @classmethod
    def from_dict(cls, dikt) -> 'DataContentMetadataOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DataContentMetadata_output of this DataContentMetadataOutput.  # noqa: E501
        :rtype: DataContentMetadataOutput
        """
        return util.deserialize_model(dikt, cls)

    @property
    def has_content_descriptors(self) -> bool:
        """Gets the has_content_descriptors of this DataContentMetadataOutput.


        :return: The has_content_descriptors of this DataContentMetadataOutput.
        :rtype: bool
        """
        return self._has_content_descriptors

    @has_content_descriptors.setter
    def has_content_descriptors(self, has_content_descriptors: bool):
        """Sets the has_content_descriptors of this DataContentMetadataOutput.


        :param has_content_descriptors: The has_content_descriptors of this DataContentMetadataOutput.
        :type has_content_descriptors: bool
        """

        self._has_content_descriptors = has_content_descriptors

    @property
    def data_content_descriptor(self) -> List[DataContentMetadataOutputInner]:
        """Gets the data_content_descriptor of this DataContentMetadataOutput.


        :return: The data_content_descriptor of this DataContentMetadataOutput.
        :rtype: List[DataContentMetadataOutputInner]
        """
        return self._data_content_descriptor

    @data_content_descriptor.setter
    def data_content_descriptor(self, data_content_descriptor: List[DataContentMetadataOutputInner]):
        """Sets the data_content_descriptor of this DataContentMetadataOutput.


        :param data_content_descriptor: The data_content_descriptor of this DataContentMetadataOutput.
        :type data_content_descriptor: List[DataContentMetadataOutputInner]
        """

        self._data_content_descriptor = data_content_descriptor
